<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!--
 * Title: 商品分类 数据库操作
 * Description: 商品分类
 * Company: com.sg920
 * author: luomj
 * time:2017-09-06 23:34:44
 * version 1.0
-->
<mapper namespace="com.sg.product.dao.master.CategoryDao">
    <resultMap id="dataResultMap" type="java.util.Map">
            <result property="id" column="id"/>
            <result property="catName" column="cat_name"/>
            <result property="catLevel" column="cat_level"/>
            <result property="pid" column="pid"/>
    </resultMap>

    <sql id="table">sg_category</sql>

    <sql id="column-part">
            id,
            cat_name,
            cat_level,
            pid
    </sql>

    <sql id="value-part">
            #{entity.id:VARCHAR},
            #{entity.catName:VARCHAR},
            #{entity.catLevel:INTEGER},
            #{entity.pid:VARCHAR}
    </sql>

    <sql id="set-part">
        <if test="entity.id != null">id = #{entity.id:VARCHAR}, </if>
        <if test="entity.catName != null">cat_name = #{entity.catName:VARCHAR}, </if>
        <if test="entity.catLevel != null">cat_level = #{entity.catLevel:INTEGER}, </if>
        <if test="entity.pid != null">pid = #{entity.pid:VARCHAR}, </if>
    </sql>

    <sql id="where-part">
        <if test="terms != null">
            <where>
                <if test="terms.id != null and terms.id !=''">and id = #{terms.id} </if>
                <if test="terms.catName != null and terms.catName !=''">and cat_name = #{terms.catName} </if>
                <if test="terms.catLevel != null and terms.catLevel !=''">and cat_level = #{terms.catLevel} </if>
                <if test="terms.pid != null and terms.pid !=''">and pid = #{terms.pid} </if>
            </where>
        </if>
    </sql>

    <insert id="insert">
        insert into
        <include refid="table"/>
        (
        <include refid="column-part"/>
        ) VALUES (
        <include refid="value-part"/>
        )
    </insert>
    <insert id="insertBatch" parameterType="List">
        insert into <include refid="table"/>(
        <include refid="column-part"/>
        ) VALUES
        <foreach collection="list" item="entity" index="index" separator=",">
            (
            <include refid="value-part"/>
            )
        </foreach>
    </insert>
    <update id="update">
        UPDATE
        <include refid="table"/>
        <set>
            <include refid="set-part"/>
        </set>
        <where>
            id = #{entity.id}
        </where>
    </update>

    <update id="updateByMap">
        update
        <include refid="table"/>
        <set>
            <include refid="set-part"/>
        </set>
        <where>
            <include refid="where-part"/>
        </where>
    </update>

    <delete id="delete">
        DELETE FROM
        <include refid="table"/>
        WHERE id = #{id}
    </delete>

    <delete id="deleteByMap" >
        delete from
        <include refid="table"/>
        <where>
            <include refid="where-part"/>
        </where>
    </delete>

    <delete id="deleteBatch">
        delete from
        <include refid="table"/>
        where id in
        <foreach item="item" index="object" collection="ids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <select id="fetch" resultMap="dataResultMap">
        select
        <include refid="column-part"/>
        from
        <include refid="table"/>
        where id = #{id}
    </select>

    <select id="find" resultMap="dataResultMap">
        select
        <include refid="column-part"/>
        from
        <include refid="table"/>
        <include refid="where-part"/>
        <if test="sort != null">
            <foreach collection="sort" item="s" index="index" separator="," open="order by ">
                ${s.property} ${s.direction}
            </foreach>
        </if>
    </select>
    <select id="count" resultType="java.lang.Long">
        select count(id)
        from
        <include refid="table"/>
        <include refid="where-part"/>
    </select>

    <select id="page" resultMap="dataResultMap">
        select
        <include refid="column-part"/>
        from
        <include refid="table"/>
        <include refid="where-part"/>
        <if test="sort != null">
            <foreach collection="sort" item="s" index="index" separator="," open="order by ">
                ${s.property} ${s.direction}
            </foreach>
        </if>
        limit #{page.offset}, #{page.size}
    </select>
</mapper>