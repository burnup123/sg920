<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!--
 * Title: 订单 数据库操作
 * Description: 订单信息
 * Company: com.sg920
 * author: luomj
 * time:2017-09-06 23:34:44
 * version 1.0
-->
<mapper namespace="com.sg.order.dao.master.OrderDao">
    <resultMap id="dataResultMap" type="java.util.Map">
            <result property="id" column="id"/>
            <result property="orderNo" column="order_no"/>
            <result property="customerid" column="customerid"/>
            <result property="total" column="total"/>
            <result property="orderLocation" column="order_location"/>
            <result property="createTime" column="create_time"/>
            <result property="deliveryAddress" column="delivery_address"/>
            <result property="deliveryLocation" column="delivery_location"/>
            <result property="deliveryTime" column="delivery_time"/>
            <result property="sender" column="sender"/>
            <result property="sendedTime" column="sended_time"/>
            <result property="sendedAddress" column="sended_address"/>
            <result property="sendedLocation" column="sended_location"/>
            <result property="paymentStatus" column="payment_status"/>
    </resultMap>

    <sql id="table">sg_order</sql>

    <sql id="column-part">
            id,
            order_no,
            customerid,
            total,
            order_location,
            create_time,
            delivery_address,
            delivery_location,
            delivery_time,
            sender,
            sended_time,
            sended_address,
            sended_location,
            payment_status
    </sql>

    <sql id="value-part">
            #{entity.id:VARCHAR},
            #{entity.orderNo:VARCHAR},
            #{entity.customerid:VARCHAR},
            #{entity.total:DECIMAL},
            #{entity.orderLocation:VARCHAR},
            #{entity.createTime:TIMESTAMP},
            #{entity.deliveryAddress:VARCHAR},
            #{entity.deliveryLocation:VARCHAR},
            #{entity.deliveryTime:TIMESTAMP},
            #{entity.sender:VARCHAR},
            #{entity.sendedTime:TIMESTAMP},
            #{entity.sendedAddress:VARCHAR},
            #{entity.sendedLocation:VARCHAR},
            #{entity.paymentStatus:VARCHAR}
    </sql>

    <sql id="set-part">
        <if test="entity.id != null">id = #{entity.id:VARCHAR}, </if>
        <if test="entity.orderNo != null">order_no = #{entity.orderNo:VARCHAR}, </if>
        <if test="entity.customerid != null">customerid = #{entity.customerid:VARCHAR}, </if>
        <if test="entity.total != null">total = #{entity.total:DECIMAL}, </if>
        <if test="entity.orderLocation != null">order_location = #{entity.orderLocation:VARCHAR}, </if>
        <if test="entity.createTime != null">create_time = #{entity.createTime:TIMESTAMP}, </if>
        <if test="entity.deliveryAddress != null">delivery_address = #{entity.deliveryAddress:VARCHAR}, </if>
        <if test="entity.deliveryLocation != null">delivery_location = #{entity.deliveryLocation:VARCHAR}, </if>
        <if test="entity.deliveryTime != null">delivery_time = #{entity.deliveryTime:TIMESTAMP}, </if>
        <if test="entity.sender != null">sender = #{entity.sender:VARCHAR}, </if>
        <if test="entity.sendedTime != null">sended_time = #{entity.sendedTime:TIMESTAMP}, </if>
        <if test="entity.sendedAddress != null">sended_address = #{entity.sendedAddress:VARCHAR}, </if>
        <if test="entity.sendedLocation != null">sended_location = #{entity.sendedLocation:VARCHAR}, </if>
        <if test="entity.paymentStatus != null">payment_status = #{entity.paymentStatus:VARCHAR}, </if>
    </sql>

    <sql id="where-part">
        <if test="terms != null">
            <where>
                <if test="terms.id != null and terms.id !=''">and id = #{terms.id} </if>
                <if test="terms.orderNo != null and terms.orderNo !=''">and order_no = #{terms.orderNo} </if>
                <if test="terms.customerid != null and terms.customerid !=''">and customerid = #{terms.customerid} </if>
                <if test="terms.total != null and terms.total !=''">and total = #{terms.total} </if>
                <if test="terms.orderLocation != null and terms.orderLocation !=''">and order_location = #{terms.orderLocation} </if>
                <if test="terms.createTime != null and terms.createTime !=''">and create_time = #{terms.createTime} </if>
                <if test="terms.deliveryAddress != null and terms.deliveryAddress !=''">and delivery_address = #{terms.deliveryAddress} </if>
                <if test="terms.deliveryLocation != null and terms.deliveryLocation !=''">and delivery_location = #{terms.deliveryLocation} </if>
                <if test="terms.deliveryTime != null and terms.deliveryTime !=''">and delivery_time = #{terms.deliveryTime} </if>
                <if test="terms.sender != null and terms.sender !=''">and sender = #{terms.sender} </if>
                <if test="terms.sendedTime != null and terms.sendedTime !=''">and sended_time = #{terms.sendedTime} </if>
                <if test="terms.sendedAddress != null and terms.sendedAddress !=''">and sended_address = #{terms.sendedAddress} </if>
                <if test="terms.sendedLocation != null and terms.sendedLocation !=''">and sended_location = #{terms.sendedLocation} </if>
                <if test="terms.paymentStatus != null and terms.paymentStatus !=''">and payment_status = #{terms.paymentStatus} </if>
            </where>
        </if>
    </sql>

    <insert id="insert">
        insert into
        <include refid="table"/>
        (
        <include refid="column-part"/>
        ) VALUES (
        <include refid="value-part"/>
        )
    </insert>
    <insert id="insertBatch" parameterType="List">
        insert into <include refid="table"/>(
        <include refid="column-part"/>
        ) VALUES
        <foreach collection="list" item="entity" index="index" separator=",">
            (
            <include refid="value-part"/>
            )
        </foreach>
    </insert>
    <update id="update">
        UPDATE
        <include refid="table"/>
        <set>
            <include refid="set-part"/>
        </set>
        <where>
            id = #{entity.id}
        </where>
    </update>

    <update id="updateByMap">
        update
        <include refid="table"/>
        <set>
            <include refid="set-part"/>
        </set>
        <where>
            <include refid="where-part"/>
        </where>
    </update>

    <delete id="delete">
        DELETE FROM
        <include refid="table"/>
        WHERE id = #{id}
    </delete>

    <delete id="deleteByMap" >
        delete from
        <include refid="table"/>
        <where>
            <include refid="where-part"/>
        </where>
    </delete>

    <delete id="deleteBatch">
        delete from
        <include refid="table"/>
        where id in
        <foreach item="item" index="object" collection="ids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <select id="fetch" resultMap="dataResultMap">
        select
        <include refid="column-part"/>
        from
        <include refid="table"/>
        where id = #{id}
    </select>

    <select id="find" resultMap="dataResultMap">
        select
        <include refid="column-part"/>
        from
        <include refid="table"/>
        <include refid="where-part"/>
        <if test="sort != null">
            <foreach collection="sort" item="s" index="index" separator="," open="order by ">
                ${s.property} ${s.direction}
            </foreach>
        </if>
    </select>
    <select id="count" resultType="java.lang.Long">
        select count(id)
        from
        <include refid="table"/>
        <include refid="where-part"/>
    </select>

    <select id="page" resultMap="dataResultMap">
        select
        <include refid="column-part"/>
        from
        <include refid="table"/>
        <include refid="where-part"/>
        <if test="sort != null">
            <foreach collection="sort" item="s" index="index" separator="," open="order by ">
                ${s.property} ${s.direction}
            </foreach>
        </if>
        limit #{page.offset}, #{page.size}
    </select>
</mapper>